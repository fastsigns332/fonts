//
  Utility
  -----------------------------------------------------------------------------

%clearfix
  zoom: 1
  &:before, &:after
    content: " "
    display: table
  &:after
    clear: both

=clearfix
  @extend %clearfix

%hide-text
  border: 0
  color: transparent
  font: 0 / 0 a
  text-shadow: none

=hide-text
  @extend %hide-text

// Screenreader safe hide
%hide-visually
  border: 0
  clip: rect(0 0 0 0)
  height: 1px
  margin: -1px
  overflow: hidden
  padding: 0
  position: absolute
  width: 1px

=hide-visually
  @extend %hide-visually

// Replace text with an image
=replace-text($image)
  +hide-text
  +background(transparent image-url($image) no-repeat)
  height: image-height($image)
  width: image-width($image)

//
  Retina
  -----------------------------------------------------------------------------

// Retina background image
$retina-suffix: "@2x" !default
=background-image-retina($base, $ext: ".png", $width: auto, $height: auto)
  $image: $base + $ext
  $image2x: $base + $retina-suffix + $ext

  background-image: image-url($image)

  @if file_exists($image2x)
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)
      +background-size($width $height)
      background-image: image-url($image2x)
 
//
  Retina sprites
    @import 'example/*.png' stores the sprite map under $example-sprites.
    This mixin requires two maps with identical sprite names.
=all-retina-sprites($map, $map2x)
  $sprite: sprite-map-name($map)
  $names: sprite-names($map)

  @each $name in $names
    .#{$sprite}-#{$name}
      background-image: $map
      background-position: sprite-position($map, $name)

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)
    @each $name in $names
      .#{$sprite}-#{$name}
        background-image: $map2x
        background-position: 0 round(nth(sprite-position($map2x, $name), 2) / 2)
        background-size: image-width(sprite-file($map, $name)) auto

//
  Miscellaneous
  -----------------------------------------------------------------------------

// A <ul> that sits flush to the left
%naked-list
  list-style: none
  list-style-image: none
  padding-left: 0

=naked-list
  @extend %naked-list

// Noise PNG from http://noisepng.com
@function noise-png($intensity: 25, $opacity: 10, $mono: false, $size: 100)
  $url: "http://noisepng.com/#{$size}-#{$intensity}-#{$opacity}"
  @if $mono == true
    $url: $url + "-monochrome"
  @return $url + ".png"

=noise-png($intensity: 25, $opacity: 10, $mono: false, $size: 100)
  background-image: noise-png($intensity, $opacity, $mono, $size)
